{"mappings":"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","sources":["<anon>","src/js/assign06.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function() {\n    const baseUrl = `https://511on.ca/api/v2/get/`;\n    var results = document.querySelector(\".results\");\n    var typeDropDown = document.getElementById(\"typeofsearch\");\n    var searchArea = document.querySelector(\".search\");\n    var areasDrop = document.getElementById(\"areas-option\");\n    var counter = 0; // count how many cameras\n    var data; // json received from API\n    typeDropDown.addEventListener(\"change\", function(event) {\n        let url;\n        const selectedValue = event.target.value;\n        if (selectedValue === \"Constructions\") url = `${baseUrl}constructionprojects`;\n        else if (selectedValue === \"Cameras\") url = `${baseUrl}cameras`;\n        if (url) {\n            var request = new XMLHttpRequest();\n            request.open(\"GET\", url);\n            request.responseType = \"json\";\n            request.onload = function() {\n                data = request.response;\n                appendOption(data);\n            };\n            request.send();\n        }\n        areasDrop.selectedIndex = 0;\n    });\n    function appendOption(data) {\n        const areas = document.getElementById(\"areas-option\");\n        const type = typeDropDown.value;\n        if (type === \"Cameras\") {\n            areasDrop.textContent = \"\";\n            areasDrop.selectedIndex = 0;\n            for(let i = 0; i < data.length; i++){\n                if (i === 0) {\n                    const allAreasPara = document.createElement(\"option\");\n                    allAreasPara.textContent = \"-- Select Area --\";\n                    areas.appendChild(allAreasPara);\n                }\n                let validator = true;\n                for(let j = i + 1; j < data.length; j++){\n                    const roadI = data[i].Roadway.replace(/-/g, \"\");\n                    const roadJ = data[j].Roadway.replace(/-/g, \"\");\n                    if (roadI.replace(/\\s/g, \"\") === roadJ.replace(/\\s/g, \"\")) {\n                        validator = false;\n                        break;\n                    }\n                }\n                if (validator && data[i].Views[0].Status === \"Enabled\") {\n                    const option = document.createElement(\"option\");\n                    option.value = data[i].Roadway;\n                    option.textContent = data[i].Roadway;\n                    areas.appendChild(option);\n                }\n            }\n        } else if (type === \"Constructions\") {\n            areasDrop.textContent = \"\";\n            areasDrop.selectedIndex = 0;\n            document.querySelector(\".results-header\").innerHTML = \"\";\n            document.querySelector(\".results\").innerHTML = \"\";\n            for(let i = 0; i < data.length; i++){\n                if (i === 0) {\n                    const allAreasPara = document.createElement(\"option\");\n                    allAreasPara.textContent = \"-- Select Area --\";\n                    areas.appendChild(allAreasPara);\n                }\n                let validator = true;\n                for(let j = i + 1; j < data.length; j++){\n                    const roadI = data[i].Roadway.replace(/-/, \"\");\n                    const roadJ = data[j].Roadway.replace(/-/, \"\");\n                    if (roadI === roadJ || roadI === \"40\") {\n                        validator = false;\n                        break;\n                    }\n                }\n                if (validator) {\n                    const option = document.createElement(\"option\");\n                    if (data[i].Roadway.length === 2 || data[i].Roadway.length === 3 || !isNaN(data[i].Roadway)) {\n                        option.value = `Highway ${data[i].Roadway}`;\n                        option.textContent = `Highway ${data[i].Roadway}`;\n                    } else {\n                        option.value = data[i].Roadway;\n                        option.textContent = data[i].Roadway;\n                    }\n                    areas.appendChild(option);\n                }\n            }\n        }\n    }\n    document.getElementById(\"submit\").addEventListener(\"click\", fetchResults);\n    document.getElementById(\"submit\").addEventListener(\"click\", clearBoxes);\n    function clearBoxes() {\n        searchArea.value = \"\";\n    }\n    function fetchResults() {\n        areasDrop.selectedIndex = 0;\n        const areaTyped = searchArea.value;\n        const optChosen = typeDropDown.value;\n        counter = 0;\n        results.innerHTML = \"\";\n        for(let i = 0; i < data.length; i++){\n            if (optChosen === \"Cameras\" && data[i].Views[0].Status === \"Enabled\" && data[i].Views[0].Description.toLowerCase().includes(areaTyped.toLowerCase()) && areaTyped !== \"\") {\n                const allCards = document.createElement(\"div\");\n                allCards.classList.add(\"allCards\");\n                counter++;\n                let cardBox = document.createElement(\"div\");\n                let arrayImages = data[i].Views;\n                const card = document.createElement(\"div\");\n                card.classList.add(\"card\");\n                const descriptionHeader = document.createElement(\"h2\");\n                descriptionHeader.classList.add(\"header-camera\");\n                descriptionHeader.textContent = data[i].Views[0].Description;\n                card.appendChild(descriptionHeader);\n                arrayImages.forEach((image)=>{\n                    const imageRoad = document.createElement(\"img\");\n                    imageRoad.src = image.Url;\n                    card.appendChild(imageRoad);\n                    cardBox.appendChild(card);\n                });\n                allCards.appendChild(cardBox);\n                results.appendChild(allCards);\n                searchArea.value = \"\";\n            } else if (optChosen === \"Constructions\" && (data[i].Roadway.toLowerCase().includes(areaTyped.toLowerCase()) || data[i].Description.toLowerCase().includes(areaTyped.toLowerCase())) && areaTyped !== \"\" && (data[i].Description !== data[i + 1]?.Description || data[i].Description.toLowerCase().includes(areaTyped.toLowerCase()))) {\n                console.log(data[i]);\n                const allCardsConstruction = document.createElement(\"div\");\n                allCardsConstruction.classList.add(\"allCardsConstruction\");\n                counter++;\n                const cardBox = document.createElement(\"div\");\n                cardBox.classList.add(\"card-box\");\n                const construction_card = document.createElement(\"div\");\n                construction_card.classList.add(\"construction-card\");\n                const descriptionHeader = document.createElement(\"h2\");\n                descriptionHeader.classList.add(\"header-construction\");\n                descriptionHeader.textContent = data[i].Roadway;\n                let direction = document.createElement(\"p\");\n                direction.classList.add(\"direction-construction\");\n                direction.textContent = `Direction: ${data[i].DirectionOfTravel}`;\n                descriptionHeader.appendChild(direction);\n                construction_card.appendChild(descriptionHeader);\n                let date = document.createElement(\"p\");\n                date.classList.add(\"date-construction\");\n                date.textContent = `Date: ${data[i].Comment}`;\n                construction_card.appendChild(date);\n                let descrip = document.createElement(\"p\");\n                descrip.classList.add(\"descript-construction\");\n                descrip.innerHTML = data[i].Description.replace(new RegExp(\"\\\\d+\\\\s*minutes|\" + areaTyped, \"gi\"), (match)=>{\n                    if (match.toLowerCase().includes(\"minutes\")) return `<span style=\"background-color: yellow; font-weight: bolder\">${match}</span>`;\n                    else return `<span style=\"font-weight: bolder\">${match}</span>`;\n                });\n                construction_card.appendChild(descrip);\n                allCardsConstruction.appendChild(construction_card);\n                results.appendChild(allCardsConstruction);\n                searchArea.value = \"\";\n            }\n        }\n        printNoCameraMessage(counter);\n    }\n    function printNoCameraMessage(counter) {\n        document.querySelector(\".results-header\").innerHTML = \"\";\n        let para = document.createElement(\"h2\");\n        para.style.color = \"Black\";\n        para.style.width = \"700px\";\n        para.style.textAlign = \"Center\";\n        para.style.borderRadius = \"10%\";\n        para.style.fontSize = \"25px\";\n        if (counter > 0) {\n            para.textContent = `Displaying all information found ... (${counter}) found`;\n            para.style.textAlign = \"Center\";\n        } else {\n            para.textContent = \"NO DATA AVAILABLE\";\n            para.style.backgroundColor = \"ORANGE\";\n        }\n        document.querySelector(\".results-header\").appendChild(para);\n    }\n    areasDrop.addEventListener(\"change\", displayDataFromDrop);\n    function displayDataFromDrop() {\n        const optChosen = typeDropDown.value;\n        let areas = areasDrop.value;\n        counter = 0;\n        areas = areas.replace(/-/g, \"\");\n        results.innerHTML = \"\";\n        document.querySelector(\".results-header\").innerHTML = \"\";\n        for(let i = 0; i < data.length; i++){\n            const allCards = document.createElement(\"div\");\n            allCards.classList.add(\"allCards\");\n            const roadWayNoDash = data[i].Roadway.replace(/-/, \"\");\n            if (optChosen === \"Cameras\" && data[i].Views[0].Status === \"Enabled\" && roadWayNoDash.includes(areas)) {\n                let cardBox = document.createElement(\"div\");\n                counter++;\n                let arrayImages = data[i].Views;\n                const card = document.createElement(\"div\");\n                card.classList.add(\"card\");\n                const descriptionHeader = document.createElement(\"h2\");\n                descriptionHeader.classList.add(\"header-camera\");\n                descriptionHeader.textContent = data[i].Views[0].Description;\n                card.appendChild(descriptionHeader);\n                arrayImages.forEach((image)=>{\n                    const imageRoad = document.createElement(\"img\");\n                    imageRoad.src = image.Url;\n                    card.appendChild(imageRoad);\n                    cardBox.appendChild(card);\n                });\n                allCards.appendChild(cardBox);\n                results.appendChild(allCards);\n            } else if (optChosen === \"Constructions\" && roadWayNoDash.includes(areas)) {\n                const allCardsConstruction = document.createElement(\"div\");\n                allCardsConstruction.classList.add(\"allCardsConstruction\");\n                counter++;\n                const cardBox = document.createElement(\"div\");\n                cardBox.classList.add(\"card-box\");\n                const construction_card = document.createElement(\"div\");\n                construction_card.classList.add(\"construction-card\");\n                const descriptionHeader = document.createElement(\"h2\");\n                descriptionHeader.classList.add(\"header-construction\");\n                descriptionHeader.textContent = data[i].Roadway;\n                let direction = document.createElement(\"p\");\n                direction.classList.add(\"direction-construction\");\n                direction.textContent = `Direction: ${data[i].DirectionOfTravel}`;\n                descriptionHeader.appendChild(direction);\n                construction_card.appendChild(descriptionHeader);\n                let date = document.createElement(\"p\");\n                date.classList.add(\"date-construction\");\n                date.textContent = `Date: ${data[i].Comment}`;\n                construction_card.appendChild(date);\n                let descrip = document.createElement(\"p\");\n                descrip.classList.add(\"descript-construction\");\n                descrip.innerHTML = data[i].Description.replace(new RegExp(\"\\\\d+\\\\s*minutes|\", \"gi\"), (match)=>{\n                    return `<span style=\"background-color: yellow; font-weight: bolder\">${match}</span>`;\n                });\n                construction_card.appendChild(descrip);\n                allCardsConstruction.appendChild(construction_card);\n                results.appendChild(allCardsConstruction);\n                searchArea.value = \"\";\n            }\n        }\n        printNoCameraMessage(counter);\n    }\n});\n\n//# sourceMappingURL=index.0cfe4a51.js.map\n","document.addEventListener(\"DOMContentLoaded\", function () {\r\n  const baseUrl = `https://511on.ca/api/v2/get/`;\r\n\r\n  var results = document.querySelector(\".results\");\r\n  var typeDropDown = document.getElementById(\"typeofsearch\");\r\n  var searchArea = document.querySelector(\".search\");\r\n  var areasDrop = document.getElementById(\"areas-option\");\r\n  var counter = 0; // count how many cameras\r\n  var data; // json received from API\r\n\r\n  typeDropDown.addEventListener(\"change\", function (event) {\r\n    let url;\r\n    const selectedValue = event.target.value;\r\n\r\n    if (selectedValue === \"Constructions\") {\r\n      url = `${baseUrl}constructionprojects`;\r\n    } else if (selectedValue === \"Cameras\") {\r\n      url = `${baseUrl}cameras`;\r\n    }\r\n\r\n    if (url) {\r\n      var request = new XMLHttpRequest();\r\n      request.open(\"GET\", url);\r\n      request.responseType = \"json\";\r\n\r\n      request.onload = function () {\r\n        data = request.response;\r\n        appendOption(data);\r\n      };\r\n      request.send();\r\n    }\r\n    areasDrop.selectedIndex = 0;\r\n  });\r\n\r\n  function appendOption(data) {\r\n    const areas = document.getElementById(\"areas-option\");\r\n    const type = typeDropDown.value;\r\n\r\n    if (type === \"Cameras\") {\r\n      areasDrop.textContent = \"\";\r\n      areasDrop.selectedIndex = 0;\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (i === 0) {\r\n          const allAreasPara = document.createElement(\"option\");\r\n          allAreasPara.textContent = \"-- Select Area --\";\r\n          areas.appendChild(allAreasPara);\r\n        }\r\n        let validator = true;\r\n        for (let j = i + 1; j < data.length; j++) {\r\n          const roadI = data[i].Roadway.replace(/-/g, \"\");\r\n          const roadJ = data[j].Roadway.replace(/-/g, \"\");\r\n\r\n          if (roadI.replace(/\\s/g, \"\") === roadJ.replace(/\\s/g, \"\")) {\r\n            validator = false;\r\n            break;\r\n          }\r\n        }\r\n        if (validator && data[i].Views[0].Status === \"Enabled\") {\r\n          const option = document.createElement(\"option\");\r\n          option.value = data[i].Roadway;\r\n          option.textContent = data[i].Roadway;\r\n          areas.appendChild(option);\r\n        }\r\n      }\r\n    } else if (type === \"Constructions\") {\r\n      areasDrop.textContent = \"\";\r\n      areasDrop.selectedIndex = 0;\r\n      document.querySelector(\".results-header\").innerHTML = \"\";\r\n      document.querySelector(\".results\").innerHTML = \"\";\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (i === 0) {\r\n          const allAreasPara = document.createElement(\"option\");\r\n          allAreasPara.textContent = \"-- Select Area --\";\r\n          areas.appendChild(allAreasPara);\r\n        }\r\n        let validator = true;\r\n        for (let j = i + 1; j < data.length; j++) {\r\n          const roadI = data[i].Roadway.replace(/-/, \"\");\r\n          const roadJ = data[j].Roadway.replace(/-/, \"\");\r\n          if (roadI === roadJ || roadI === \"40\") {\r\n            validator = false;\r\n            break;\r\n          }\r\n        }\r\n        if (validator) {\r\n          const option = document.createElement(\"option\");\r\n          if (\r\n            data[i].Roadway.length === 2 ||\r\n            data[i].Roadway.length === 3 ||\r\n            !isNaN(data[i].Roadway)\r\n          ) {\r\n            option.value = `Highway ${data[i].Roadway}`;\r\n            option.textContent = `Highway ${data[i].Roadway}`;\r\n          } else {\r\n            option.value = data[i].Roadway;\r\n            option.textContent = data[i].Roadway;\r\n          }\r\n          areas.appendChild(option);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  document.getElementById(\"submit\").addEventListener(\"click\", fetchResults);\r\n  document.getElementById(\"submit\").addEventListener(\"click\", clearBoxes);\r\n\r\n  function clearBoxes() {\r\n    searchArea.value = \"\";\r\n  }\r\n\r\n  function fetchResults() {\r\n    areasDrop.selectedIndex = 0;\r\n    const areaTyped = searchArea.value;\r\n    const optChosen = typeDropDown.value;\r\n    counter = 0;\r\n    results.innerHTML = \"\";\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (\r\n        optChosen === \"Cameras\" &&\r\n        data[i].Views[0].Status === \"Enabled\" &&\r\n        data[i].Views[0].Description.toLowerCase().includes(areaTyped.toLowerCase()) &&\r\n        areaTyped !== \"\"\r\n      ) {\r\n        const allCards = document.createElement(\"div\");\r\n        allCards.classList.add(\"allCards\");\r\n        counter++;\r\n        let cardBox = document.createElement(\"div\");\r\n        let arrayImages = data[i].Views;\r\n        const card = document.createElement(\"div\");\r\n        card.classList.add(\"card\");\r\n\r\n        const descriptionHeader = document.createElement(\"h2\");\r\n        descriptionHeader.classList.add(\"header-camera\");\r\n        descriptionHeader.textContent = data[i].Views[0].Description;\r\n\r\n        card.appendChild(descriptionHeader);\r\n\r\n        arrayImages.forEach((image) => {\r\n          const imageRoad = document.createElement(\"img\");\r\n          imageRoad.src = image.Url;\r\n          card.appendChild(imageRoad);\r\n          cardBox.appendChild(card);\r\n        });\r\n\r\n        allCards.appendChild(cardBox);\r\n        results.appendChild(allCards);\r\n        searchArea.value = \"\";\r\n      } else if (\r\n        optChosen === \"Constructions\" &&\r\n        (data[i].Roadway.toLowerCase().includes(areaTyped.toLowerCase()) ||\r\n          data[i].Description.toLowerCase().includes(areaTyped.toLowerCase())) &&\r\n        areaTyped !== \"\" &&\r\n        (data[i].Description !== data[i + 1]?.Description ||\r\n          data[i].Description.toLowerCase().includes(areaTyped.toLowerCase()))\r\n      ) {\r\n        console.log(data[i]);\r\n        const allCardsConstruction = document.createElement(\"div\");\r\n        allCardsConstruction.classList.add(\"allCardsConstruction\");\r\n        counter++;\r\n        const cardBox = document.createElement(\"div\");\r\n        cardBox.classList.add(\"card-box\");\r\n\r\n        const construction_card = document.createElement(\"div\");\r\n        construction_card.classList.add(\"construction-card\");\r\n\r\n        const descriptionHeader = document.createElement(\"h2\");\r\n        descriptionHeader.classList.add(\"header-construction\");\r\n        descriptionHeader.textContent = data[i].Roadway;\r\n\r\n        let direction = document.createElement(\"p\");\r\n        direction.classList.add(\"direction-construction\");\r\n        direction.textContent = `Direction: ${data[i].DirectionOfTravel}`;\r\n        descriptionHeader.appendChild(direction);\r\n\r\n        construction_card.appendChild(descriptionHeader);\r\n\r\n        let date = document.createElement(\"p\");\r\n        date.classList.add(\"date-construction\");\r\n        date.textContent = `Date: ${data[i].Comment}`;\r\n        construction_card.appendChild(date);\r\n\r\n        let descrip = document.createElement(\"p\");\r\n        descrip.classList.add(\"descript-construction\");\r\n        descrip.innerHTML = data[i].Description.replace(\r\n          new RegExp(\"\\\\d+\\\\s*minutes|\" + areaTyped, \"gi\"),\r\n          (match) => {\r\n            if (match.toLowerCase().includes(\"minutes\")) {\r\n              return `<span style=\"background-color: yellow; font-weight: bolder\">${match}</span>`;\r\n            } else {\r\n              return `<span style=\"font-weight: bolder\">${match}</span>`;\r\n            }\r\n          }\r\n        );\r\n\r\n        construction_card.appendChild(descrip);\r\n\r\n        allCardsConstruction.appendChild(construction_card);\r\n        results.appendChild(allCardsConstruction);\r\n        searchArea.value = \"\";\r\n      }\r\n    }\r\n    printNoCameraMessage(counter);\r\n  }\r\n\r\n  function printNoCameraMessage(counter) {\r\n    document.querySelector(\".results-header\").innerHTML = \"\";\r\n    let para = document.createElement(\"h2\");\r\n    para.style.color = \"Black\";\r\n    para.style.width = \"700px\";\r\n    para.style.textAlign = \"Center\";\r\n    para.style.borderRadius = \"10%\";\r\n    para.style.fontSize = \"25px\";\r\n    if (counter > 0) {\r\n      para.textContent = `Displaying all information found ... (${counter}) found`;\r\n      para.style.textAlign = \"Center\";\r\n    } else {\r\n      para.textContent = \"NO DATA AVAILABLE\";\r\n      para.style.backgroundColor = \"ORANGE\";\r\n    }\r\n    document.querySelector(\".results-header\").appendChild(para);\r\n  }\r\n\r\n  areasDrop.addEventListener(\"change\", displayDataFromDrop);\r\n\r\n  function displayDataFromDrop() {\r\n    const optChosen = typeDropDown.value;\r\n    let areas = areasDrop.value;\r\n    counter = 0;\r\n    areas = areas.replace(/-/g, \"\");\r\n    results.innerHTML = \"\";\r\n    document.querySelector(\".results-header\").innerHTML = \"\";\r\n    for (let i = 0; i < data.length; i++) {\r\n      const allCards = document.createElement(\"div\");\r\n      allCards.classList.add(\"allCards\");\r\n      const roadWayNoDash = data[i].Roadway.replace(/-/, \"\");\r\n      if (\r\n        optChosen === \"Cameras\" &&\r\n        data[i].Views[0].Status === \"Enabled\" &&\r\n        roadWayNoDash.includes(areas)\r\n      ) {\r\n        let cardBox = document.createElement(\"div\");\r\n        counter++;\r\n        let arrayImages = data[i].Views;\r\n        const card = document.createElement(\"div\");\r\n        card.classList.add(\"card\");\r\n\r\n        const descriptionHeader = document.createElement(\"h2\");\r\n        descriptionHeader.classList.add(\"header-camera\");\r\n        descriptionHeader.textContent = data[i].Views[0].Description;\r\n\r\n        card.appendChild(descriptionHeader);\r\n\r\n        arrayImages.forEach((image) => {\r\n          const imageRoad = document.createElement(\"img\");\r\n          imageRoad.src = image.Url;\r\n          card.appendChild(imageRoad);\r\n          cardBox.appendChild(card);\r\n        });\r\n\r\n        allCards.appendChild(cardBox);\r\n        results.appendChild(allCards);\r\n      } else if (optChosen === \"Constructions\" && roadWayNoDash.includes(areas)) {\r\n        const allCardsConstruction = document.createElement(\"div\");\r\n        allCardsConstruction.classList.add(\"allCardsConstruction\");\r\n        counter++;\r\n        const cardBox = document.createElement(\"div\");\r\n        cardBox.classList.add(\"card-box\");\r\n\r\n        const construction_card = document.createElement(\"div\");\r\n        construction_card.classList.add(\"construction-card\");\r\n\r\n        const descriptionHeader = document.createElement(\"h2\");\r\n        descriptionHeader.classList.add(\"header-construction\");\r\n        descriptionHeader.textContent = data[i].Roadway;\r\n\r\n        let direction = document.createElement(\"p\");\r\n        direction.classList.add(\"direction-construction\");\r\n        direction.textContent = `Direction: ${data[i].DirectionOfTravel}`;\r\n        descriptionHeader.appendChild(direction);\r\n\r\n        construction_card.appendChild(descriptionHeader);\r\n\r\n        let date = document.createElement(\"p\");\r\n        date.classList.add(\"date-construction\");\r\n        date.textContent = `Date: ${data[i].Comment}`;\r\n        construction_card.appendChild(date);\r\n\r\n        let descrip = document.createElement(\"p\");\r\n        descrip.classList.add(\"descript-construction\");\r\n        descrip.innerHTML = data[i].Description.replace(\r\n          new RegExp(\"\\\\d+\\\\s*minutes|\", \"gi\"),\r\n          (match) => {\r\n            return `<span style=\"background-color: yellow; font-weight: bolder\">${match}</span>`;\r\n          }\r\n        );\r\n        construction_card.appendChild(descrip);\r\n\r\n        allCardsConstruction.appendChild(construction_card);\r\n        results.appendChild(allCardsConstruction);\r\n        searchArea.value = \"\";\r\n      }\r\n    }\r\n    printNoCameraMessage(counter);\r\n  }\r\n});\r\n"],"names":["document","addEventListener","baseUrl","data","results","querySelector","typeDropDown","getElementById","searchArea","areasDrop","counter","printNoCameraMessage","innerHTML","para","createElement","style","color","width","textAlign","borderRadius","fontSize","textContent","backgroundColor","appendChild","event","url","selectedValue","target","value","request","XMLHttpRequest","open","responseType","onload","appendOption","areas","type","selectedIndex","i","length","allAreasPara","validator","j","roadI","Roadway","replace","roadJ","Views","Status","option","isNaN","response","send","areaTyped","optChosen","Description","toLowerCase","includes","allCards","classList","add","cardBox","arrayImages","card","descriptionHeader","forEach","image","imageRoad","src","Url","console","log","allCardsConstruction","construction_card","direction","DirectionOfTravel","date","Comment","descrip","RegExp","match","roadWayNoDash"],"version":3,"file":"index.0cfe4a51.js.map"}